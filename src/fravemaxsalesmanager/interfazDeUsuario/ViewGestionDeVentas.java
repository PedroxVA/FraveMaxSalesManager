/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fravemaxsalesmanager.interfazDeUsuario;

import fravemaxsalesmanager.accesoADatos.ClienteData;
import fravemaxsalesmanager.accesoADatos.ProductoData;
import fravemaxsalesmanager.entidades.Cliente;
import fravemaxsalesmanager.entidades.Producto;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jfneg
 */
public class ViewGestionDeVentas extends javax.swing.JInternalFrame {

    private ClienteData cliData = new ClienteData();
    private ProductoData proData = new ProductoData();
    private DefaultTableModel modeloCliente = new DefaultTableModel();
    private DefaultTableModel modeloVenta = new DefaultTableModel();

    /**
     * Creates new form ViewGestionDeVentas
     */
    public ViewGestionDeVentas() {
        initComponents();
        armarTablaCliente();
        armarTablaVenta();
        cargarComboCliente();
        cargarComboCategoria();
        cargarComboNombreProducto();
        //--------
        String tipoProducto = (String)jCTipoProducto.getSelectedItem();
        List<Producto> listaP = proData.buscarProductoPorNombreProducto(tipoProducto);
        modeloVenta.setRowCount(0);
        for (Producto producto : listaP) {
            cargarTablaVenta(producto);
        }
        //----
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCBuscarCliente = new javax.swing.JComboBox<>();
        jBBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaCliente = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jCCategoriaProducto = new javax.swing.JComboBox<>();
        jCTipoProducto = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablaVenta = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTFBuscar = new javax.swing.JTextField();

        jLabel2.setText("jLabel2");

        setBorder(null);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gesti√≥n de Ventas");

        jLabel3.setText("Buscar Cliente por:");

        jCBuscarCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jTablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "CUIT", "Domicilio", "Provincia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablaCliente);

        jLabel5.setText("Buscar Producto por:");

        jCCategoriaProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCCategoriaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCCategoriaProductoActionPerformed(evt);
            }
        });

        jCTipoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCTipoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCTipoProductoActionPerformed(evt);
            }
        });

        jTablaVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Producto", "Marca", "Modelo", "Precio Unitario", "Unidades", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTablaVenta);

        jLabel6.setText("Sub-Total: ");

        jTextField1.setText("jTextField1");

        jLabel7.setText("I.V.A 21 %");

        jTextField2.setText("jTextField2");

        jLabel8.setText("Total Factura: ");

        jTextField3.setText("jTextField3");

        jButton2.setText("Aceptar y Facturar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jTFBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(jBBuscar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(jCCategoriaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(jCTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar)
                    .addComponent(jTFBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCCategoriaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        try {
            String claveString = jTFBuscar.getText().replace(" ", "");
            int clave = Integer.parseInt(claveString);

            String metodoDeBusqueda = (String) jCBuscarCliente.getSelectedItem();
            if (metodoDeBusqueda.equals("ID Cliente")) {
                Cliente cliente = cliData.obtenerClientePorId(clave);
                cargarTablaCliente(cliente);
            } else if (metodoDeBusqueda.equals("CUIT Cliente")) {
                Cliente cliente = cliData.obtenerClientePorCuil(clave);
                cargarTablaCliente(cliente);
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID no valida");
        }

    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jCCategoriaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCCategoriaProductoActionPerformed
        // TODO add your handling code here:
        String categoriaSeleccionada = (String) jCCategoriaProducto.getSelectedItem();

        // Limpia el JComboBox jCTipoProducto
        jCTipoProducto.removeAllItems();

        // Carga los productos relacionados en jCTipoProducto basados en la categor√≠a seleccionada
        if (categoriaSeleccionada.equals("Electrodom√©sticos")) {
            // Asumiendo que tngo una lista de productos para esta categor√≠a
            List<String> productos = obtenerProductosElectrodomesticos();
            for (String producto : productos) {
                jCTipoProducto.addItem(producto);
            }
        } else if (categoriaSeleccionada.equals("Tecnolog√≠a")) {
            // Asumiendo que tienes una lista de productos para esta categor√≠a
            List<String> productos = obtenerProductosTecnologia();
            for (String producto : productos) {
                jCTipoProducto.addItem(producto);
            }
        } else if (categoriaSeleccionada.equals("Celulares y accesorios")) {
            // Asumiendo que tienes una lista de productos para esta categor√≠a
            List<String> productos = obtenerProductosCelulares();
            for (String producto : productos) {
                jCTipoProducto.addItem(producto);
            }
        }
    }//GEN-LAST:event_jCCategoriaProductoActionPerformed

    private void jCTipoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCTipoProductoActionPerformed
        // TODO add your handling code here:
        String tipoProducto = (String)jCTipoProducto.getSelectedItem();
        List<Producto> listaP = proData.buscarProductoPorNombreProducto(tipoProducto);
        modeloVenta.setRowCount(0);
        for (Producto producto : listaP) {
            cargarTablaVenta(producto);
        }
    }//GEN-LAST:event_jCTipoProductoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCBuscarCliente;
    private javax.swing.JComboBox<String> jCCategoriaProducto;
    private javax.swing.JComboBox<String> jCTipoProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFBuscar;
    private javax.swing.JTable jTablaCliente;
    private javax.swing.JTable jTablaVenta;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private void cargarComboCliente() {
        List<String> buscar = new ArrayList<>();
        buscar.add("ID Cliente");
        buscar.add("CUIT Cliente");

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(buscar.toArray(new String[0]));
        jCBuscarCliente.setModel(comboBoxModel);
    }

    private void cargarComboCategoria() {
        List<String> categ = new ArrayList<>();
        categ.add("Electrodom√©sticos");
        categ.add("Celulares y accesorios");
        categ.add("Tecnolog√≠a");
        categ.add("Peque√±o Electro");

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(categ.toArray(new String[0]));
        jCCategoriaProducto.setModel(comboBoxModel);

        jCCategoriaProducto.addActionListener(jCTipoProducto);

    }

    private void cargarComboNombreProducto() {
        String categoriaSeleccionada = (String) jCCategoriaProducto.getSelectedItem();

        List<String> nprod = new ArrayList<>();

        if (categoriaSeleccionada.equals("Electrodom√©sticos")) {

            nprod.add("Heladeras");
            nprod.add("Lavarropas");
            nprod.add("Televisores");
            nprod.add("Cocinas");
        } else if (categoriaSeleccionada.equals("Tecnolog√≠a")) {
            nprod.add("Notebook");
            nprod.add("Tablets");
        } else if (categoriaSeleccionada.equals("Celulares y accesorios")) {
            nprod.add("Tel√©fonos");
        }

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(nprod.toArray(new String[0]));
        jCTipoProducto.setModel(comboBoxModel);

    }

    private void armarTablaCliente() {
        modeloCliente.addColumn("Nombre");
        modeloCliente.addColumn("Apellido");
        modeloCliente.addColumn("Cuil");
        modeloCliente.addColumn("Domicilio");
        modeloCliente.addColumn("Provincia");
        jTablaCliente.setModel(modeloCliente);
    }

    private void cargarTablaCliente(Cliente cliente) {
        modeloCliente.setRowCount(0);
        modeloCliente.addRow(new Object[]{cliente.getNombre(), cliente.getApellido(), cliente.getCuil(), cliente.getUbicacion().getDireccion(), cliente.getUbicacion().getProvincia()});
    }
    
    private void armarTablaVenta() {
        modeloVenta.addColumn("Producto");
        modeloVenta.addColumn("Marca");
        modeloVenta.addColumn("Modelo");
        modeloVenta.addColumn("Precio Unitario");
        modeloVenta.addColumn("Unidades");
        modeloVenta.addColumn("Total");
        jTablaVenta.setModel(modeloVenta);
    }
    private void cargarTablaVenta(Producto producto){
        String prod = producto.getNombreProducto();
        String marca = producto.getMarca();
        String modelo = producto.getModelo();
        Double precioU = producto.getPrecioActual();
        int unidades = producto.getStock();
        Double total = unidades*precioU;
        
        modeloVenta.addRow(new Object[] {prod, marca, modelo, precioU, unidades, total});
    }

    // M√©todos para obtener los productos de cada categor√≠a
    private List<String> obtenerProductosElectrodomesticos() {
        List<String> productos = new ArrayList<>();
        productos.add("Heladeras");
        productos.add("Lavarropas");
        productos.add("Televisores");
        productos.add("Cocinas");
        return productos;
    }

    private List<String> obtenerProductosTecnologia() {
        List<String> productos = new ArrayList<>();
        productos.add("Notebook");
        productos.add("Tablets");
        return productos;
    }

    private List<String> obtenerProductosCelulares() {
        List<String> productos = new ArrayList<>();
        productos.add("Tel√©fonos");
        return productos;
}

}

