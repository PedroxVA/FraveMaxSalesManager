/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fravemaxsalesmanager.interfazDeUsuario;

import fravemaxsalesmanager.accesoADatos.ClienteData;
import fravemaxsalesmanager.accesoADatos.DetalleVentaData;
import fravemaxsalesmanager.accesoADatos.ProductoData;
import fravemaxsalesmanager.accesoADatos.VentaData;
import fravemaxsalesmanager.clasesExtra.MyEditor;
import fravemaxsalesmanager.clasesExtra.MyEditorSuma;
import fravemaxsalesmanager.clasesExtra.MyRenderer;
import fravemaxsalesmanager.clasesExtra.MyRendererSuma;
import fravemaxsalesmanager.entidades.Cliente;
import fravemaxsalesmanager.entidades.DetalleVenta;
import fravemaxsalesmanager.entidades.Producto;
import fravemaxsalesmanager.entidades.Venta;
import java.sql.Date;

import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;


import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sun.swing.SwingAccessor;

/**
 *
 * @author jfneg
 */
public class ViewGestionDeVentas extends javax.swing.JInternalFrame {

    private ClienteData cliData = new ClienteData();
    private ProductoData proData = new ProductoData();
    private VentaData venData = new VentaData();
    private DetalleVentaData deVenData = new DetalleVentaData();
    private DefaultTableModel modeloCliente = new DefaultTableModel();
    private DefaultTableModel modeloVenta = new DefaultTableModel();
    private DefaultTableModel modeloCompras = new DefaultTableModel();
    private List<Producto> listaP = new ArrayList();
    private double subTotal = 0.00;//******************
    private Cliente cliente = new Cliente();
    private List<Producto> listaCarrito = new ArrayList();

    /**
     * Creates new form ViewGestionDeVentas
     */
    public ViewGestionDeVentas() {
        initComponents();
        armarTablaCliente();
        armarTablaVenta();
        armarTablaCompras();
        colocarBotonesTablaCompra();
        cargarComboCliente();
        cargarComboCategoria();
        cargarComboNombreProducto();
        jDCFecha.setDate(Date.valueOf(LocalDate.now()));
        //--------
        String tipoProducto = (String)jCTipoProducto.getSelectedItem();
        listaP = proData.buscarProductoPorNombreProducto(tipoProducto);
        modeloVenta.setRowCount(0);
        for (Producto producto : listaP) {
            cargarTablaVenta(producto);
        }
        //-------
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new fravemaxsalesmanager.interfazDeUsuario.Backventas();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablaCompras = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jBAgregarAlCarrito = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jDCFecha = new com.toedter.calendar.JDateChooser();
        jTFBuscar = new javax.swing.JTextField();
        jBFacturar = new javax.swing.JButton();
        jTFTotalF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTFIVA = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTFSubTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablaVenta = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCBuscarCliente = new javax.swing.JComboBox<>();
        jBBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaCliente = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jCCategoriaProducto = new javax.swing.JComboBox<>();
        jCTipoProducto = new javax.swing.JComboBox<>();
        jBSalir = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setBorder(null);

        jPanel1.setBackground(new java.awt.Color(240, 240, 255));

        jTablaCompras.setBackground(new java.awt.Color(240, 240, 240));
        jTablaCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Precio Item", "+", "Cantidad", "-"
            }
        ));
        jScrollPane3.setViewportView(jTablaCompras);

        jLabel4.setBackground(new java.awt.Color(105, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fravemaxsalesmanager/recursos/carrito.png"))); // NOI18N
        jLabel4.setText("Carrito de Compras");

        jBAgregarAlCarrito.setBackground(new java.awt.Color(105, 255, 255));
        jBAgregarAlCarrito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fravemaxsalesmanager/recursos/carrito-de-compras2.png"))); // NOI18N
        jBAgregarAlCarrito.setText("Agregar al Carrito");
        jBAgregarAlCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarAlCarritoActionPerformed(evt);
            }
        });

        jLabel9.setText("Fecha: ");

        jDCFecha.setBackground(new java.awt.Color(105, 255, 255));

        jBFacturar.setBackground(new java.awt.Color(105, 255, 255));
        jBFacturar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fravemaxsalesmanager/recursos/iconoGuardar.png"))); // NOI18N
        jBFacturar.setText("Aceptar y Facturar");
        jBFacturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFacturarActionPerformed(evt);
            }
        });

        jTFTotalF.setEditable(false);
        jTFTotalF.setBackground(new java.awt.Color(204, 255, 255));

        jLabel8.setText("Total Factura: ");

        jTFIVA.setEditable(false);
        jTFIVA.setBackground(new java.awt.Color(204, 255, 255));

        jLabel7.setText("I.V.A 21 %");

        jTFSubTotal.setEditable(false);
        jTFSubTotal.setBackground(new java.awt.Color(204, 255, 255));

        jLabel6.setText("Sub-Total: ");

        jTablaVenta.setBackground(new java.awt.Color(240, 240, 240));
        jTablaVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Producto", "Marca", "Modelo", "Precio Unitario", "Unidades"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTablaVenta.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTablaVenta);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gesti√≥n de Ventas");

        jLabel3.setText("Buscar Cliente por:");

        jCBuscarCliente.setBackground(new java.awt.Color(105, 255, 255));
        jCBuscarCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBuscarClienteActionPerformed(evt);
            }
        });

        jBBuscar.setBackground(new java.awt.Color(105, 255, 255));
        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jTablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "CUIT", "Domicilio", "Provincia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablaCliente);

        jLabel5.setText("Buscar Producto por:");

        jCCategoriaProducto.setBackground(new java.awt.Color(102, 255, 255));
        jCCategoriaProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCCategoriaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCCategoriaProductoActionPerformed(evt);
            }
        });

        jCTipoProducto.setBackground(new java.awt.Color(105, 255, 255));
        jCTipoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCTipoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCTipoProductoActionPerformed(evt);
            }
        });

        jBSalir.setBackground(new java.awt.Color(105, 255, 255));
        jBSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fravemaxsalesmanager/recursos/cerrar.png"))); // NOI18N
        jBSalir.setText("Salir sin Facturar");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jTFBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jBBuscar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(670, 670, 670)
                        .addComponent(jBAgregarAlCarrito))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jCCategoriaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jCTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFIVA)
                            .addComponent(jTFSubTotal)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(567, 567, 567)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jBFacturar, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFTotalF)
                            .addComponent(jBSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(588, 588, 588)
                    .addComponent(jLabel9)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jDCFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(731, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(932, 932, 932)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBBuscar)))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCCategoriaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jBAgregarAlCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFTotalF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBFacturar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jDCFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(575, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(230, 230, 230)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(269, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 864, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        try {
            String claveString = jTFBuscar.getText().replace(" ", "");
            int clave = Integer.parseInt(claveString);

            String metodoDeBusqueda = (String) jCBuscarCliente.getSelectedItem();
            if (metodoDeBusqueda.equals("ID Cliente")) {
                cliente = cliData.obtenerClientePorId(clave);
                cargarTablaCliente(cliente);
            } else if (metodoDeBusqueda.equals("CUIT Cliente")) {
                cliente = cliData.obtenerClientePorCuil(clave);
                cargarTablaCliente(cliente);
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID no valida");
        }

    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jCCategoriaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCCategoriaProductoActionPerformed
        // TODO add your handling code here:
        String categoriaSeleccionada = (String) jCCategoriaProducto.getSelectedItem();

        // Limpia el JComboBox jCTipoProducto
        jCTipoProducto.removeAllItems();

        // Carga los productos relacionados en jCTipoProducto basados en la categor√≠a seleccionada
        if (categoriaSeleccionada.equals("Electrodom√©sticos")) {
            // Asumiendo que tngo una lista de productos para esta categor√≠a
            List<String> productos = obtenerProductosElectrodomesticos();
            for (String producto : productos) {
                jCTipoProducto.addItem(producto);
            }
        } else if (categoriaSeleccionada.equals("Tecnolog√≠a")) {
            // Asumiendo que tienes una lista de productos para esta categor√≠a
            List<String> productos = obtenerProductosTecnologia();
            for (String producto : productos) {
                jCTipoProducto.addItem(producto);
            }
        } else if (categoriaSeleccionada.equals("Celulares y accesorios")) {
            // Asumiendo que tienes una lista de productos para esta categor√≠a
            List<String> productos = obtenerProductosCelulares();
            for (String producto : productos) {
                jCTipoProducto.addItem(producto);
            }
        }
    }//GEN-LAST:event_jCCategoriaProductoActionPerformed

    private void jCTipoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCTipoProductoActionPerformed
        // TODO add your handling code here:
        String tipoProducto = (String)jCTipoProducto.getSelectedItem();
        listaP = proData.buscarProductoPorNombreProducto(tipoProducto);
        modeloVenta.setRowCount(0);
        for (Producto producto : listaP) {
            cargarTablaVenta(producto);
        }
    }//GEN-LAST:event_jCTipoProductoActionPerformed

    private void jBAgregarAlCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarAlCarritoActionPerformed
        // TODO add your handling code here:
        DecimalFormatSymbols separadores = new DecimalFormatSymbols();
        separadores.setDecimalSeparator('.');
        DecimalFormat formato = new DecimalFormat("$ #,##0.00", separadores);
        
        
        
        try {
            int y = jTablaVenta.getSelectedRow();
            Producto producto = listaP.get(y);
            cargarTablaCompras(producto);
            
            String precioFormateado = formato.format(producto.getPrecioActual());
            
            listaCarrito.add(producto);
            
            actualizarDatosJTF();
            //--------------------- futuro metodo para dar formato
            //String subTotalString = formato.format(subTotal);

            
            //String IVAString = formato.format(IVA);
            

            //String facturaString = formato.format(factura);
            //---------------------
        } catch (Exception e) {
            System.out.println("error: "+e.getMessage());
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jBAgregarAlCarritoActionPerformed

    private void jBFacturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFacturarActionPerformed
        // TODO add your handling code here:
        DecimalFormatSymbols separadores = new DecimalFormatSymbols();
        separadores.setDecimalSeparator('.');
        DecimalFormat formato = new DecimalFormat("$ #,##0.00", separadores);
        
        
        
        List<DetalleVenta> listaDetalleVenta = new ArrayList<>();
        LocalDate fecha = LocalDate.now();
        try {
            int idCliente = cliente.getIdCliente();
            if (idCliente == 0) {
                JOptionPane.showMessageDialog(null, "¬°idCliente no v√°lida!");
            } else {
                fecha = jDCFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                double importeBruto = 0.00;

                Venta venta = new Venta(idCliente, fecha, importeBruto);
                
                if(!listaCarrito.isEmpty()){
                    venData.altaVenta(venta);
                    int contador = 0;
                  for (Producto producto : listaCarrito) {
                    
                    int cantidad = Integer.parseInt(String.valueOf(jTablaCompras.getValueAt(contador, 3)));//*****************+
                    int idVenta = venta.getIdVenta();
                    Double precioVenta = producto.getPrecioActual();
                    Double descuentos = 0.0; //***********+
                    Double IVA = precioVenta * 0.21; //*******+
                    int idProducto = producto.getIdProducto();
                    importeBruto += precioVenta*cantidad;

                    DetalleVenta detalleVenta = new DetalleVenta(cantidad, idVenta, precioVenta, descuentos, IVA, idProducto);
                    listaDetalleVenta.add(detalleVenta);
                    contador ++;
                }
                  venta.setImporteBruto(importeBruto);
                  venData.modificarVenta(venta);
                for (DetalleVenta detalleVenta : listaDetalleVenta) {
                    deVenData.altaDetalleVenta(detalleVenta);
                }
                //----
                    String tipoProducto = (String) jCTipoProducto.getSelectedItem();
                    listaP = proData.buscarProductoPorNombreProducto(tipoProducto);
                    modeloVenta.setRowCount(0);
                    for (Producto producto : listaP) {
                        cargarTablaVenta(producto);
                }
                //----
                }else{
                    JOptionPane.showMessageDialog(null, "Carrito vac√≠o.");
                }
                
                JOptionPane.showMessageDialog(null, "Se ha facturado con exito!"); 
            }
            modeloCompras.setRowCount(0);
            listaCarrito = new ArrayList<>();
            
           

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Fecha no v√°lida.");
        }


    }//GEN-LAST:event_jBFacturarActionPerformed

    private void jCBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBuscarClienteActionPerformed
        // TODO add your handling code here:
        jTFBuscar.setText("");
        modeloCliente.setRowCount(0);
    }//GEN-LAST:event_jCBuscarClienteActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregarAlCarrito;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBFacturar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<String> jCBuscarCliente;
    private javax.swing.JComboBox<String> jCCategoriaProducto;
    private javax.swing.JComboBox<String> jCTipoProducto;
    private com.toedter.calendar.JDateChooser jDCFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTFBuscar;
    private javax.swing.JTextField jTFIVA;
    private javax.swing.JTextField jTFSubTotal;
    private javax.swing.JTextField jTFTotalF;
    private javax.swing.JTable jTablaCliente;
    private javax.swing.JTable jTablaCompras;
    private javax.swing.JTable jTablaVenta;
    // End of variables declaration//GEN-END:variables

    private void actualizarDatosJTF(){
        
        DecimalFormatSymbols separadores = new DecimalFormatSymbols();
        separadores.setDecimalSeparator('.');
        DecimalFormat formato = new DecimalFormat("$ #,##0.00", separadores);
        
            
        subTotal=0.0;
        int filas = jTablaCompras.getRowCount();
        for (int i = 0; i < filas; i++) {
            
            
            

                String precio = String.valueOf(jTablaCompras.getValueAt(i, 1)) ;
                precio = precio.replaceAll("[^0-9]", ""); // Elimina todo excepto n√∫meros y puntos
                double valor = Double.parseDouble(precio); // Convierte la cadena en un n√∫mero
                valor = valor/100;
                Double cantidad = Double.parseDouble(String.valueOf(jTablaCompras.getValueAt(i, 3))) ; 

                subTotal+= valor*cantidad;

                

            
            
            
        }
        
        jTFSubTotal.setText(formato.format(subTotal));
        jTFSubTotal.setHorizontalAlignment(SwingConstants.RIGHT);
        
        double iva = subTotal*0.21;
        
        jTFIVA.setText(formato.format(iva));
        jTFIVA.setHorizontalAlignment(SwingConstants.RIGHT);
        
        double total = subTotal + iva;
        
        jTFTotalF.setText(formato.format(total));
        jTFTotalF.setHorizontalAlignment(SwingConstants.RIGHT);
        
    }
    private void cargarComboCliente() {
        List<String> buscar = new ArrayList<>();
        buscar.add("ID Cliente");
        buscar.add("CUIT Cliente");

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(buscar.toArray(new String[0]));
        jCBuscarCliente.setModel(comboBoxModel);
    }

    private void cargarComboCategoria() {
        List<String> categ = new ArrayList<>();
        categ.add("Electrodom√©sticos");
        categ.add("Celulares y accesorios");
        categ.add("Tecnolog√≠a");
        categ.add("Peque√±o Electro");

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(categ.toArray(new String[0]));
        jCCategoriaProducto.setModel(comboBoxModel);

        jCCategoriaProducto.addActionListener(jCTipoProducto);

    }

    private void cargarComboNombreProducto() {
        String categoriaSeleccionada = (String) jCCategoriaProducto.getSelectedItem();

        List<String> nprod = new ArrayList<>();

        if (categoriaSeleccionada.equals("Electrodom√©sticos")) {

            nprod.add("Heladeras");
            nprod.add("Lavarropas");
            nprod.add("Televisores");
            nprod.add("Cocinas");
        } else if (categoriaSeleccionada.equals("Tecnolog√≠a")) {
            nprod.add("Notebook");
            nprod.add("Tablets");
        } else if (categoriaSeleccionada.equals("Celulares y accesorios")) {
            nprod.add("Tel√©fonos");
        }

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(nprod.toArray(new String[0]));
        jCTipoProducto.setModel(comboBoxModel);

    }

    private void armarTablaCliente() {
        modeloCliente.addColumn("Nombre");
        modeloCliente.addColumn("Apellido");
        modeloCliente.addColumn("Cuil");
        modeloCliente.addColumn("Domicilio");
        modeloCliente.addColumn("Provincia");
        jTablaCliente.setModel(modeloCliente);
    }

    private void cargarTablaCliente(Cliente cliente) {
        
        try {
            modeloCliente.setRowCount(0);
            modeloCliente.addRow(new Object[]{cliente.getNombre(), cliente.getApellido(), cliente.getCuil(), cliente.getUbicacion().getDireccion(), cliente.getUbicacion().getProvincia()});
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Cliente no encontrado.");
    
        }}
        
    
    private void armarTablaVenta() {
        modeloVenta.addColumn("Producto");
        modeloVenta.addColumn("Marca");
        modeloVenta.addColumn("Modelo");
        modeloVenta.addColumn("Precio Unitario");
        modeloVenta.addColumn("Unidades");
        jTablaVenta.setModel(modeloVenta);
    }
    private void cargarTablaVenta(Producto producto){
        
        DecimalFormatSymbols separadores = new DecimalFormatSymbols();
        separadores.setDecimalSeparator('.');
        DecimalFormat formato = new DecimalFormat("$ #,##0.00", separadores);
                
        String prod = producto.getNombreProducto();
        String marca = producto.getMarca();
        String modelo = producto.getModelo();
        
        String precioFormateado = formato.format(producto.getPrecioActual());
        
        Double precioU = producto.getPrecioActual();
        int unidades = producto.getStock();
        Double total = unidades*precioU;
        
        modeloVenta.addRow(new Object[] {prod, marca, modelo, precioFormateado, unidades});
    }
    private void armarTablaCompras(){
        modeloCompras.addColumn("Item");
        modeloCompras.addColumn("Precio Item");
        modeloCompras.addColumn("+");
        modeloCompras.addColumn("Cantidad");
        modeloCompras.addColumn("-");
        jTablaCompras.setModel(modeloCompras);
    }
    private void colocarBotonesTablaCompra(){
        TableColumn agregarColumn;
        agregarColumn = jTablaCompras.getColumnModel().getColumn(4);
        agregarColumn.setCellEditor(new MyEditor(jTablaCompras, jTFSubTotal, jTFIVA, jTFTotalF));
        agregarColumn.setCellRenderer(new MyRenderer(true));
        TableColumn agregarColumnSuma;
        agregarColumnSuma = jTablaCompras.getColumnModel().getColumn(2);
        agregarColumnSuma.setCellEditor(new MyEditorSuma(jTablaCompras, jTFSubTotal, jTFIVA, jTFTotalF));
        agregarColumnSuma.setCellRenderer(new MyRendererSuma(true));
    }
    private void cargarTablaCompras(Producto producto){
        
        DecimalFormatSymbols separadores = new DecimalFormatSymbols();
        separadores.setDecimalSeparator('.');
        DecimalFormat formato = new DecimalFormat("$ #,##0.00", separadores);
        
        
        String prod = producto.getNombreProducto();
        String marca = producto.getMarca();
        String modelo = producto.getModelo();  

        //---
        
        //String precioFormateado = formato.format(producto.getPrecioActual()); genera un error con los botones al hacer un string
        
        Double precioU = producto.getPrecioActual();
        int unidades = producto.getStock();
        //---
        Double total = precioU*unidades;
        String totalFormateado = formato.format(total);
        int cantidad = 1;
        //....
//        JButton botonMas = new JButton("+");
//        JButton botonMenos = new JButton("+");
//        botonMas.addActionListener(new ActionListener(){
//            @Override
//            public void actionPerformed(ActionEvent e){
//                int fila = jTablaCompras.getSelectedRow();
//                int cantidadActual = (int) modeloCompras.getValueAt(fila, 3);
//                
//                modeloCompras.setValueAt(cantidadActual+1, fila, 3);
//            }
//        });
//        botonMenos.addActionListener(new ActionListener(){
//            @Override
//            public void actionPerformed(ActionEvent e){
//                int fila = jTablaCompras.getSelectedRow();
//                
//                int cantidadActual = (int) modeloCompras.getValueAt(fila, 3);
//                if (cantidadActual>0){
//                    modeloCompras.setValueAt(cantidadActual-1, fila, 3);
//                }else{
//                    JOptionPane.showMessageDialog(null, "No hay mas stock");    
//                }
//                
//            }
//        });
        
      

        modeloCompras.addRow(new Object[] {prod+", "+marca+", "+modelo, formato.format(producto.getPrecioActual()), null, cantidad,null});
        
    }
    

    // M√©todos para obtener los productos de cada categor√≠a
    private List<String> obtenerProductosElectrodomesticos() {
        List<String> productos = new ArrayList<>();
        productos.add("Heladeras");
        productos.add("Lavarropas");
        productos.add("Televisores");
        productos.add("Cocinas");
        return productos;
    }

    private List<String> obtenerProductosTecnologia() {
        List<String> productos = new ArrayList<>();
        productos.add("Notebook");
        productos.add("Tablets");
        return productos;
    }

    private List<String> obtenerProductosCelulares() {
        List<String> productos = new ArrayList<>();
        productos.add("Tel√©fonos");
        return productos;
}

}

